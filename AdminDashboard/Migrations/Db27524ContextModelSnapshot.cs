// <auto-generated />
using System;
using AdminDashboard.TransportDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminDashboard.Migrations
{
    [DbContext(typeof(Db27524Context))]
    partial class Db27524ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdminDashboard.Models.BaiViet", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("AdminId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("AdminUserId")
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayDang")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("AdminUserId");

                    b.ToTable("BaiViet");
                });

            modelBuilder.Entity("AdminDashboard.Models.ChuyenXe", b =>
                {
                    b.Property<string>("ChuyenId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<TimeSpan>("GioDenDuKien")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("GioDi")
                        .HasColumnType("time");

                    b.Property<string>("LoTrinhId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayDi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("XeId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ChuyenId");

                    b.HasIndex("LoTrinhId");

                    b.HasIndex("NgayDi");

                    b.HasIndex("XeId");

                    b.ToTable("ChuyenXe");
                });

            modelBuilder.Entity("AdminDashboard.Models.DonHang", b =>
                {
                    b.Property<string>("DonHangId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ChuyenId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ChuyenXeChuyenId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("IDKhachHang")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("KhachHangIDKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("numeric(10,2)");

                    b.Property<string>("TrangThaiThanhToan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DonHangId");

                    b.HasIndex("ChuyenId");

                    b.HasIndex("ChuyenXeChuyenId");

                    b.HasIndex("IDKhachHang");

                    b.HasIndex("KhachHangIDKhachHang");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("AdminDashboard.Models.Ghe", b =>
                {
                    b.Property<string>("GheID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SoGhe")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("XeId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("XeId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("GheID");

                    b.HasIndex("XeId1");

                    b.HasIndex("XeId", "SoGhe")
                        .IsUnique();

                    b.ToTable("Ghe");
                });

            modelBuilder.Entity("AdminDashboard.Models.KhachHang", b =>
                {
                    b.Property<string>("IDKhachHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DiaChiMail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IDKhachHang");

                    b.HasIndex("DiaChiMail")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("AdminDashboard.Models.LoTrinh", b =>
                {
                    b.Property<string>("LoTrinhId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("GiaVeCoDinh")
                        .HasColumnType("numeric(10,2)");

                    b.Property<string>("TramDi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TramToi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("LoTrinhId");

                    b.HasIndex("TramToi");

                    b.HasIndex("TramDi", "TramToi");

                    b.ToTable("LoTrinh");
                });

            modelBuilder.Entity("AdminDashboard.Models.LoaiXe", b =>
                {
                    b.Property<string>("LoaiXeId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenLoaiXe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LoaiXeId");

                    b.ToTable("LoaiXe");
                });

            modelBuilder.Entity("AdminDashboard.Models.Menu", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenMenu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.Property<int>("ViTri")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("AdminDashboard.Models.NguoiDung", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TenDangNhap")
                        .IsUnique();

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("AdminDashboard.Models.Tram", b =>
                {
                    b.Property<string>("IdTram")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DiaChiTram")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenTram")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTram");

                    b.ToTable("Tram");
                });

            modelBuilder.Entity("AdminDashboard.Models.UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(0);

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(1);

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("AdminDashboard.Models.VaiTro", b =>
                {
                    b.Property<string>("RoleId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenVaiTro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.HasIndex("TenVaiTro")
                        .IsUnique();

                    b.ToTable("VaiTro");
                });

            modelBuilder.Entity("AdminDashboard.Models.Ve", b =>
                {
                    b.Property<string>("VeId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DonHangId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DonHangId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("GheID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("GheID1")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("VeId");

                    b.HasIndex("DonHangId1");

                    b.HasIndex("GheID");

                    b.HasIndex("GheID1");

                    b.HasIndex("DonHangId", "GheID")
                        .IsUnique();

                    b.ToTable("Ve");
                });

            modelBuilder.Entity("AdminDashboard.Models.Xe", b =>
                {
                    b.Property<string>("XeId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BienSoXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoaiXeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("XeId");

                    b.HasIndex("BienSoXe")
                        .IsUnique();

                    b.HasIndex("LoaiXeId");

                    b.ToTable("Xe");
                });

            modelBuilder.Entity("AdminDashboard.Models.BaiViet", b =>
                {
                    b.HasOne("AdminDashboard.Models.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("AdminId");

                    b.HasOne("AdminDashboard.Models.NguoiDung", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminUserId");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("AdminDashboard.Models.ChuyenXe", b =>
                {
                    b.HasOne("AdminDashboard.Models.LoTrinh", "LoTrinh")
                        .WithMany()
                        .HasForeignKey("LoTrinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminDashboard.Models.Xe", "Xe")
                        .WithMany()
                        .HasForeignKey("XeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoTrinh");

                    b.Navigation("Xe");
                });

            modelBuilder.Entity("AdminDashboard.Models.DonHang", b =>
                {
                    b.HasOne("AdminDashboard.Models.ChuyenXe", null)
                        .WithMany()
                        .HasForeignKey("ChuyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminDashboard.Models.ChuyenXe", "ChuyenXe")
                        .WithMany()
                        .HasForeignKey("ChuyenXeChuyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminDashboard.Models.KhachHang", null)
                        .WithMany()
                        .HasForeignKey("IDKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminDashboard.Models.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangIDKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuyenXe");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("AdminDashboard.Models.Ghe", b =>
                {
                    b.HasOne("AdminDashboard.Models.Xe", null)
                        .WithMany()
                        .HasForeignKey("XeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminDashboard.Models.Xe", "Xe")
                        .WithMany()
                        .HasForeignKey("XeId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Xe");
                });

            modelBuilder.Entity("AdminDashboard.Models.KhachHang", b =>
                {
                    b.HasOne("AdminDashboard.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("AdminDashboard.Models.LoTrinh", b =>
                {
                    b.HasOne("AdminDashboard.Models.Tram", "TramDiNavigation")
                        .WithMany()
                        .HasForeignKey("TramDi")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AdminDashboard.Models.Tram", "TramToiNavigation")
                        .WithMany()
                        .HasForeignKey("TramToi")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TramDiNavigation");

                    b.Navigation("TramToiNavigation");
                });

            modelBuilder.Entity("AdminDashboard.Models.UserRole", b =>
                {
                    b.HasOne("AdminDashboard.Models.VaiTro", "VaiTro")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminDashboard.Models.NguoiDung", "NguoiDung")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("AdminDashboard.Models.Ve", b =>
                {
                    b.HasOne("AdminDashboard.Models.DonHang", null)
                        .WithMany()
                        .HasForeignKey("DonHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminDashboard.Models.DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("DonHangId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminDashboard.Models.Ghe", null)
                        .WithMany()
                        .HasForeignKey("GheID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminDashboard.Models.Ghe", "Ghe")
                        .WithMany()
                        .HasForeignKey("GheID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("Ghe");
                });

            modelBuilder.Entity("AdminDashboard.Models.Xe", b =>
                {
                    b.HasOne("AdminDashboard.Models.LoaiXe", "LoaiXe")
                        .WithMany()
                        .HasForeignKey("LoaiXeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LoaiXe");
                });

            modelBuilder.Entity("AdminDashboard.Models.NguoiDung", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("AdminDashboard.Models.VaiTro", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
