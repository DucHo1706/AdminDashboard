@* //Tan Huy - GoSix // *@
@model IEnumerable<AdminDashboard.Models.Ghe>

@{
    ViewData["Title"] = "Danh Sách Ghế";
}

<div class="ghe-container">
    <div class="ghe-panel">
        <div class="panel-header">
            <h2><i class="fas fa-chair"></i> @ViewData["Title"]</h2>
            <p>Xe: <strong class="highlight">@ViewBag.BienSoXe</strong></p>
        </div>

        <div class="panel-summary">
            <span class="badge badge-success-custom">🟢 Trống: @Model.Count(g => g.TrangThai == "Trống")</span>
            <span class="badge badge-danger-custom">🔴 Đã đặt: @Model.Count(g => g.TrangThai == "Đã đặt")</span>
            <span class="badge badge-secondary-custom">📋 Tổng: @Model.Count() ghế</span>

            <a asp-action="Index" class="btn btn-secondary-custom float-end">
                <i class="fas fa-arrow-left"></i> Quay lại danh sách xe
            </a>
        </div>

        <div class="panel-body">
            <div class="seat-grid">
                @foreach (var ghe in Model.OrderBy(g => g.SoGhe))
                {
                    <div class="seat-card @GetCardClass(ghe.TrangThai)">
                        <div class="seat-number">Ghế @ghe.SoGhe</div>
                        <div class="seat-status @GetBadgeClass(ghe.TrangThai)">
                            @ghe.TrangThai
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@functions {
    string GetCardClass(string trangThai)
    {
        return trangThai switch
        {
            "Trống" => "seat-available",
            "Đã đặt" => "seat-booked",
            _ => "seat-other"
        };
    }

    string GetBadgeClass(string trangThai)
    {
        return trangThai switch
        {
            "Trống" => "text-success",
            "Đã đặt" => "text-danger",
            _ => "text-muted"
        };
    }
}

<style>
    body {
        background-color: #f4f6f9;
        font-family: 'Poppins', sans-serif;
        min-height: 100vh;
    }

    .ghe-container {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        padding: 80px 15px;
    }

    .ghe-panel {
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 1000px;
        overflow: hidden;
    }

    /* HEADER */
    .panel-header {
        background-color: #fff7ec;
        padding: 25px 30px;
        border-bottom: 1px solid #ffe2b6;
        text-align: center;
    }

        .panel-header h2 {
            font-size: 24px;
            font-weight: 700;
            color: #3f4c6b;
            margin-bottom: 5px;
        }

        .panel-header i {
            color: #ff9800;
            margin-right: 10px;
        }

        .panel-header p {
            color: #6c757d;
            font-size: 15px;
        }

    .highlight {
        color: #ff9800;
        font-weight: 600;
    }

    /* SUMMARY */
    .panel-summary {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: center;
        padding: 20px 30px;
        background-color: #f8f9fa;
        border-bottom: 1px solid #e9ecef;
        gap: 12px;
    }

    .badge {
        font-size: 14px;
        padding: 8px 14px;
        border-radius: 6px;
        font-weight: 600;
    }

    .badge-success-custom {
        background-color: #d4edda;
        color: #155724;
    }

    .badge-danger-custom {
        background-color: #f8d7da;
        color: #721c24;
    }

    .badge-secondary-custom {
        background-color: #e2e3e5;
        color: #383d41;
    }

    .btn-secondary-custom {
        background-color: #6c757d;
        color: #fff;
        padding: 10px 20px;
        border-radius: 8px;
        border: none;
        font-weight: 600;
        transition: all 0.25s ease;
        text-decoration: none;
    }

        .btn-secondary-custom:hover {
            background-color: #5a6268;
            transform: translateY(-2px);
        }

    /* GRID GHẾ */
    .panel-body {
        padding: 30px;
    }

    .seat-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
        gap: 16px;
        justify-items: center;
    }

    .seat-card {
        width: 100%;
        padding: 18px 0;
        border-radius: 10px;
        text-align: center;
        font-weight: 600;
        font-size: 15px;
        border: 2px solid transparent;
        transition: all 0.25s ease;
        cursor: default;
    }

        .seat-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
        }

    /* Màu theo trạng thái */
    .seat-available {
        border-color: #28a745;
        background-color: #e8f5e9;
        color: #1e7e34;
    }

    .seat-booked {
        border-color: #dc3545;
        background-color: #fbe9e7;
        color: #b71c1c;
    }

    .seat-other {
        border-color: #adb5bd;
        background-color: #f1f3f5;
        color: #495057;
    }

    .seat-number {
        font-size: 16px;
        margin-bottom: 6px;
    }

    .seat-status {
        font-size: 14px;
        font-weight: 500;
    }
</style>
