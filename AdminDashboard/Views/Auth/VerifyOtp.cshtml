<<<<<<< HEAD
@model AdminDashboard.Models.Login.VerifyOtpRequest

@{
    Layout = null;
    ViewData["Title"] = "Xác minh mã OTP";
}

<!DOCTYPE html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - GoSix – Đi nhanh, sống trọn</title>

    <link rel="shortcut icon" href="~/css/images/icon_logo.png" type="image/x-icon" />
    <link rel="icon" href="~/css/images/icon_logo.png" type="image/png" />

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/AdminDashboard.styles.css" asp-append-version="true" />
    <style>
        body {
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        main {
            flex: 1 0 auto;
        }

        footer {
            flex-shrink: 0;
        }

        .card {
            width: 100%;
            height: 500px;
            position: relative;
            background-color: rgb(255, 255, 255);
            border-bottom: 3px solid #4c6bff;
            overflow: hidden;
            -webkit-box-shadow: 0px 12px 65px -39px rgba(0, 0, 0, 1);
            -moz-box-shadow: 0px 12px 65px -39px rgba(0, 0, 0, 1);
            box-shadow: 0px 12px 65px -39px rgba(0, 0, 0, 1);
            border-radius: 5px;
        }

        .BG {
            width: 100%;
            height: 100%;
            position: relative;
            overflow: hidden;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .BG svg {
                position: absolute;
                width: 50%;
                left: -20%;
                top: -20%;
                fill: rgb(244, 244, 244);
                transition: all 0.5s;
            }

        .content {
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
            padding: 25px;
            color: rgb(30, 30, 30);
            gap: 3px;
        }

        .heading {
            font-size: 1.4em;
            font-weight: 700;
            color: rgb(30, 30, 30);
        }

        .sub-sub-heading {
            font-size: 12px;
            color: rgb(128, 128, 128);
        }

        .card-btn {
            margin-top: 20px;
            height: 30px;
            width: 100%;
            border: none;
            background: linear-gradient(60deg, #4c6bff, #8196ff);
            color: white;
            border-radius: 30px;
            cursor: pointer;
        }

        .card:hover .BG svg {
            left: 0%;
            top: 0%;
            transform: rotate(180deg) scale(9);
            fill: #c0c7ec;
        }

        .otp-input {
            width: 50px;
            height: 50px;
            margin: 0 5px;
            text-align: center;
            font-size: 24px;
            font-weight: bold;
            border: 2px solid #ddd;
            border-radius: 8px;
            outline: none;
            transition: border-color 0.3s;
        }

        .otp-input:focus {
            border-color: #4c6bff;
        }

        .otp-container {
            display: flex;
            justify-content: center;
            margin: 20px 0;
        }

        .wave-group {
            position: relative;
        }

            .wave-group .input {
                font-size: 16px;
                padding: 10px 10px 10px 5px;
                display: block;
                width: 200px;
                border: none;
                border-bottom: 1px solid #515151;
                background: transparent;
            }

                .wave-group .input:focus {
                    outline: none;
                }

            .wave-group .label {
                color: #999;
                font-size: 18px;
                font-weight: normal;
                position: absolute;
                pointer-events: none;
                left: 5px;
                top: 10px;
                display: flex;
            }

            .wave-group .label-char {
                transition: 0.2s ease all;
                transition-delay: calc(var(--index) * 0.05s);
            }

            .wave-group .input:focus ~ label .label-char,
            .wave-group .input:valid ~ label .label-char {
                transform: translateY(-20px);
                font-size: 14px;
                color: #5264ae;
            }

            .wave-group .bar {
                position: relative;
                display: block;
                width: 200px;
            }

                .wave-group .bar:before,
                .wave-group .bar:after {
                    content: "";
                    height: 2px;
                    width: 0;
                    bottom: 1px;
                    position: absolute;
                    background: #5264ae;
                    transition: 0.2s ease all;
                    -moz-transition: 0.2s ease all;
                    -webkit-transition: 0.2s ease all;
                }

                .wave-group .bar:before {
                    left: 50%;
                }

                .wave-group .bar:after {
                    right: 50%;
                }

            .wave-group .input:focus ~ .bar:before,
            .wave-group .input:focus ~ .bar:after {
                width: 50%;
            }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h2 class="text-center mb-4">Xác minh mã OTP</h2>
        <div class="card shadow-sm">
            <div class="BG">
                <svg viewBox="0 0 512 512"
                     class="ionicon"
                     xmlns="http://www.w3.org/2000/svg">
                    <path d="M256 176a80 80 0 1080 80 80.24 80.24 0 00-80-80zm172.72 80a165.53 165.53 0 01-1.64 22.34l48.69 38.12a11.59 11.59 0 012.63 14.78l-46.06 79.52a11.64 11.64 0 01-14.14 4.93l-57.25-23a176.56 176.56 0 01-38.82 22.67l-8.56 60.78a11.93 11.93 0 01-11.51 9.86h-92.12a12 12 0 01-11.51-9.53l-8.56-60.78A169.3 169.3 0 01151.05 393L93.8 416a11.64 11.64 0 01-14.14-4.92L33.6 331.57a11.59 11.59 0 012.63-14.78l48.69-38.12A174.58 174.58 0 0183.28 256a165.53 165.53 0 011.64-22.34l-48.69-38.12a11.59 11.59 0 01-2.63-14.78l46.06-79.52a11.64 11.64 0 0114.14-4.93l57.25 23a176.56 176.56 0 0138.82-22.67l8.56-60.78A11.93 11.93 0 01209.94 26h92.12a12 12 0 0111.51 9.53l8.56 60.78A169.3 169.3 0 01361 119l57.2-23a11.64 11.64 0 0114.14 4.92l46.06 79.52a11.59 11.59 0 01-2.63 14.78l-48.69 38.12a174.58 174.58 0 011.64 22.66z"></path>
                </svg>
            </div>
            <form asp-action="VerifyOtp" method="post">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger" role="alert">
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    </div>
                }
                <div class="content">
                    <p class="heading">Xác minh OTP</p>
                    <label class="form-label" style="font-weight:bold">Nhập mã OTP</label>
                    <p class="sub-sub-heading">Chúng tôi đã gửi mã OTP 6 chữ số đến email: <strong>@Model.Email</strong></p>
                    
                    <div class="wave-group">
                        <input asp-for="OtpCode" class="input" type="text" maxlength="6" required="" placeholder="Nhập mã OTP" />
                        <span class="bar"></span>
                        <label class="label">
                            <span style="--index: 0" class="label-char">O</span>
                            <span style="--index: 1" class="label-char">T</span>
                            <span style="--index: 2" class="label-char">P</span>
                            <span style="--index: 3" class="label-char"> </span>
                            <span style="--index: 4" class="label-char">C</span>
                            <span style="--index: 5" class="label-char">o</span>
                            <span style="--index: 6" class="label-char">d</span>
                            <span style="--index: 7" class="label-char">e</span>
                        </label>
                    </div>
                    
                    <input asp-for="Email" type="hidden" />
                    
                    <div class="text-center mt-lg-5">
                        <button type="submit" class="btn btn-success me-2">Xác minh</button>
                        <a asp-controller="Auth" asp-action="ForgotPass" class="btn btn-secondary">Quay lại</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</body>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Auto-focus và format OTP input
        document.addEventListener('DOMContentLoaded', function() {
            const otpInput = document.querySelector('input[name="OtpCode"]');
            if (otpInput) {
                otpInput.addEventListener('input', function(e) {
                    // Chỉ cho phép nhập số
                    e.target.value = e.target.value.replace(/[^0-9]/g, '');
                });
            }
        });
    </script>
}
=======
@{
    ViewData["Title"] = "Xác thực mã OTP";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* * * CSS tùy chỉnh cho giao diện "bắt mắt"
         * Sử dụng lại nền tảng "đẳng cấp" từ trước và đổi màu nhấn sang XANH LÁ
         */

    /* Nền và font chữ cơ bản */
    body {
        background-color: #f8f9fa;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
    }

    /* Canh giữa form */
    .auth-container {
        min-height: 90vh;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    /* Thiết kế thẻ Card */
    .auth-card {
        border: none;
        border-radius: 1rem;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.05);
        padding: 1.5rem;
        background-color: #ffffff;
    }

    /* Tiêu đề form (Màu XANH LÁ) */
    .auth-title {
        font-weight: 700;
        font-size: 1.75rem;
        color: #2c3e50;
        margin-bottom: 1rem;
        text-align: center;
    }

        .auth-title .fas {
            color: #28a745; /* Màu nhấn XANH LÁ */
        }

    /* Chữ phụ (mô tả) */
    .auth-subtitle {
        color: #6c757d;
        text-align: center;
        margin-bottom: 1.5rem;
        line-height: 1.6;
    }

    /* *
         * ĐÂY LÀ PHẦN QUAN TRỌNG: 6 Ô INPUT OTP
         */
    .otp-input-container {
        gap: 0.75rem; /* Khoảng cách giữa các ô */
    }

    .otp-input {
        width: 48px;
        height: 60px;
        font-size: 1.75rem;
        font-weight: 600;
        text-align: center;
        padding: 0.5rem;
        border: 1px solid #e0e0e0;
        border-radius: 0.75rem;
        transition: all 0.2s ease;
        color: #2c3e50;
    }
        /* Hiệu ứng "pop" (nảy lên) và "glow" (phát sáng) khi focus */
        .otp-input:focus {
            border-color: #28a745; /* Viền XANH LÁ */
            box-shadow: 0 0 15px rgba(40,167,69,0.2); /* Đổ bóng XANH LÁ */
            transform: scale(1.05); /* Phóng to nhẹ */
            z-index: 10;
        }

    /* Nút bấm (Màu XANH LÁ) */
    .btn-primary-custom {
        font-weight: 600;
        font-size: 1rem;
        padding: 0.85rem 1.5rem;
        border-radius: 0.75rem;
        background-color: #28a745; /* Nền XANH LÁ */
        border-color: #28a745;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(40,167,69,0.3); /* Đổ bóng XANH LÁ */
    }

        .btn-primary-custom:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(40,167,69,0.4);
            background-color: #218838;
            border-color: #1e7e34;
        }

    /* Link Gửi lại / Quay lại (Màu XANH LÁ khi hover) */
    .auth-link {
        font-weight: 500;
        color: #5a6a7b;
        text-decoration: none;
        transition: color 0.2s ease;
    }

        .auth-link:hover {
            color: #28a745; /* Màu XANH LÁ */
        }

    .resend-text {
        color: #6c757d;
        font-size: 0.95rem;
    }

</style>

<div class="auth-container">
    <div class="col-md-5 col-lg-4">
        <div class="card auth-card">
            <div class="card-body p-lg-4">

                <h4 class="auth-title">
                    <i class="fas fa-shield-alt me-2"></i>Xác thực OTP
                </h4>

                @if (!string.IsNullOrEmpty(ViewBag.Error))
                {
                    <div class="alert alert-danger" role="alert">
                        <i class="fas fa-exclamation-triangle me-2"></i> @ViewBag.Error
                    </div>
                }

                <p class="auth-subtitle">
                    Một mã 6 chữ số đã được gửi đến
                    <strong class="d-block text-dark mt-1">@ViewBag.Email</strong>
                </p>

                <form method="post" asp-action="VerifyOtp" id="otp-form">
                    <input type="hidden" name="email" value="@ViewBag.Email" />
                    <input type="hidden" name="otpCode" id="otp-full-code" />

                    <div class="d-flex justify-content-center otp-input-container mb-4">
                        <input type="tel" class="form-control otp-input" maxlength="1" pattern="[0-9]" required>
                        <input type="tel" class="form-control otp-input" maxlength="1" pattern="[0-9]" required>
                        <input type="tel" class="form-control otp-input" maxlength="1" pattern="[0-9]" required>
                        <input type="tel" class="form-control otp-input" maxlength="1" pattern="[0-9]" required>
                        <input type="tel" class="form-control otp-input" maxlength="1" pattern="[0-9]" required>
                        <input type="tel" class="form-control otp-input" maxlength="1" pattern="[0-9]" required>
                    </div>

                    <div class="d-grid gap-2 mt-4">
                        <button type="submit" class="btn btn-primary-custom">
                            <i class="fas fa-check me-2"></i> Xác thực
                        </button>
                    </div>
                </form>

                <div class="text-center mt-4">
                    <p class="resend-text mb-2">
                        Chưa nhận được mã?
                        <a href="#" class="auth-link fw-bold">Gửi lại</a>
                    </p>
                    <a href="@Url.Action("ForgotPassword", "Auth")" class="auth-link">
                        <i class="fas fa-arrow-left me-1"></i> Quay lại
                    </a>
                </div>

            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const form = document.getElementById('otp-form');
        const inputs = form.querySelectorAll('.otp-input');
        const hiddenInput = document.getElementById('otp-full-code');

        // Hàm cập nhật giá trị cho input ẩn
        function updateHiddenInput() {
            let combinedValue = '';
            inputs.forEach(input => {
                combinedValue += input.value;
            });
            hiddenInput.value = combinedValue;
        }

        inputs.forEach((input, index) => {
            // 1. Tự động nhảy sang ô kế tiếp khi nhập
            input.addEventListener('input', function() {
                // Chỉ cho phép số
                this.value = this.value.replace(/[^0-9]/g, '');

                if (this.value.length === 1 && index < inputs.length - 1) {
                    inputs[index + 1].focus();
                }
                updateHiddenInput();
            });

            // 2. Xử lý phím Backspace (quay lại ô trước)
            input.addEventListener('keydown', function(e) {
                if (e.key === 'Backspace' && this.value.length === 0 && index > 0) {
                    inputs[index - 1].focus();
                }
            });

            // 3. Xử lý Paste (dán mã)
            input.addEventListener('paste', function(e) {
                e.preventDefault();
                const pasteData = (e.clipboardData || window.clipboardData)
                                    .getData('text').trim().replace(/[^0-9]/g, '');

                if (pasteData.length === 6) {
                    inputs.forEach((input, idx) => {
                        input.value = pasteData[idx] || '';
                    });
                    inputs[inputs.length - 1].focus(); // Focus ô cuối
                    updateHiddenInput();
                }
            });

            // 4. Tự động chọn (select) số khi focus (dễ dàng ghi đè)
            input.addEventListener('focus', function() {
                this.select();
            });
        });

        // Tự động focus ô đầu tiên khi tải trang
        inputs[0].focus();
    });
</script>
>>>>>>> master
